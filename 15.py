# Функция выводит на экран поле для игры , печатая все элементы массива, по 4 в каждой строке
def draw(lst):
    print(lst[0], lst[1], lst[2], lst[3],)
    print(lst[4], lst[5], lst[6], lst[7])
    print(lst[8], lst[9], lst[10], lst[11])
    print(lst[12], lst[13], lst[14], lst[15])


# Функция, которая передвигает выбранную плитку "x" на свободное место , если это возможно
def move(x, lst):
    # Объявляем глобальную переменную , которая будет содержать положение плитки на доске
    global p
    # Производим перебор всех элементов массива , попутно сравнивая их со значением на выбранной плитке
    for i in range(0, 16):
        # Интерпритируем символы в массиве как целые числа , а пустому месту присваеваем значение 0
        if lst[i] != "_ ":
            n = int(lst[i])
        else:
            n = 0
        if n == x:
            p = i
            break
        else:
            i += 1
    # Проверяем , есть ли пустое место вокруг выбранной плитки
    # Оно может быть сверху или снизу(+-4 позиции) или справа-слева(+-1 позиция)
    for m in (4, 1, -4, -1):
        # k - предположительное расположение пустого места
        k = p + m
        if k > 15:
            k = k - 15
    # Если в k-той позиции действительно пустое место , передвигаем плитку
        if lst[k] == "_ ":
            lst[p], lst[k] = lst[k], lst[p]
            break


# Проверяем условия победы
def won(lst):
    # Создаем массив элементов , который бы соответствовал выигрышному условию
    win = ["1 ", "2 ", "3 ", "4 ", "5 ", "6 ", "7 ", "8 ", "9 ", "10", "11", "12", "13", "14", "15", "_ "]
    j = 0
    # Сверяем массив игрового поля и выигрышный . В случае полного сходства возвращаем True ,иначе - False
    for i in range(0, 16):
        if lst[i] == win[i]:
            j += 1
        else:
            return False
    if j == 16:
        return True


# Массив для отрисовки игрового поля
A = ["15", "14", "13", "12", "11", "10", "9 ", "8 ", "7 ", "6 ", "5 ", "4 ", "3 ", "1 ", "2 ", "_ "]
# Изначальное состояние игры не выигрышное
result = False
# Отрисовываем поле для начала игры
draw(A)
while result is not True:
    # Запрос , какую плитку будем двигать
    print("Choose tile")
    t = int(input())
    # Двигаем плитку , если это возможно
    move(t, A)
    # И заново отрисовываем игровое поле
    draw(A)
    # Проверяем на условия победы
    result = won(A)
print("You won!")
